{"version":3,"sources":["components/NoteForm.jsx","utilities/fromatDate.js","components/note.jsx","App.js","reportWebVitals.js","index.js"],"names":["NoteForm","props","useState","title","setTitle","text","setText","useEffect","adjustTextareaHeight","textarea","document","querySelector","style","height","scrollHeight","onSubmit","e","preventDefault","noteId","id","uuidv4","noteCreatedAt","createdAt","Date","noteUpdatedAt","note","updatedAt","onUpdate","onAdd","handleNote","className","placeholder","value","onChange","target","maxLength","required","type","formatDate","date","withYear","formattedDate","Intl","DateTimeFormat","dateStyle","timeStyle","format","nth","monthDayForNth","getDate","toString","isTeen","length","replace","Note","onDelete","onOpenModal","index","createdFormattedDate","updatedFormattedDate","createdClass","onClick","Modal","setAppElement","customStyles","content","inset","border","background","overflow","borderRadius","outline","padding","App","notes","setNotes","modalIsOpen","setIsOpen","modalNoteIndex","setModalNoteIndex","confirmDelete","deleteIndex","swal","icon","buttons","dangerMode","then","willDelete","updatedNotes","splice","handleDelete","openModal","updateIndex","classList","contains","closeModal","newNote","map","isOpen","onRequestClose","contentLabel","updatedNote","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed0217fb.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction NoteForm(props) {\r\n\r\n    const [title, setTitle] = useState(props.title);\r\n    const [text, setText] = useState(props.text);\r\n\r\n    useEffect(() => {\r\n        adjustTextareaHeight();\r\n    });\r\n\r\n    const handleNoteTitle = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const handleNoteText = (e) => {\r\n        setText(e.target.value);\r\n        adjustTextareaHeight();\r\n    }\r\n\r\n    const handleNote = (e) => {\r\n        e.preventDefault();\r\n        const noteId = (props.id) ? props.id : uuidv4();\r\n        const noteCreatedAt = (props.createdAt) ? props.createdAt : new Date();\r\n        const noteUpdatedAt = (props.createdAt) ? new Date() : null;\r\n        const note = { title, text, createdAt: noteCreatedAt, updatedAt: noteUpdatedAt, id: noteId }\r\n        if (props.id) props.onUpdate(note);\r\n        else props.onAdd(note);\r\n        setTitle('');\r\n        setText('');\r\n    }\r\n\r\n    const adjustTextareaHeight = () => {\r\n        const textarea = document.querySelector('.note-form__item--text');\r\n        textarea.style.height = \"auto\";\r\n        textarea.style.height = (textarea.scrollHeight) + \"px\";\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => {handleNote(e)}}  className='note-form'>\r\n            <input placeholder='Note Title (max 25 chars)' value={title} onChange={handleNoteTitle} maxLength={25} className='note-form__item note-form__item--title'/>\r\n            <textarea placeholder='Note text (max 250 chars)' value={text} onChange={handleNoteText} maxLength={250} className='note-form__item note-form__item--text' required>\r\n                \r\n            </textarea>\r\n            <input type='submit' value='Done' className='note-form__item note-form__item--submit' />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NoteForm;","function formatDate(date, withYear) {\r\n    const options = { dateStyle: \"medium\", timeStyle: \"short\" };\r\n    let formattedDate = new Intl.DateTimeFormat('en-US', options).format(date);\r\n    let nth = 'th';\r\n    let monthDayForNth = date.getDate().toString();\r\n    const isTeen = ((monthDayForNth.length > 1) && (monthDayForNth[0] === '1')) ? true : false;\r\n    monthDayForNth = (monthDayForNth.length > 1) ? monthDayForNth[1] : monthDayForNth;\r\n  \r\n    if (!isTeen) {\r\n      switch (monthDayForNth) {\r\n        case '1':\r\n          nth = 'st';\r\n          break;\r\n        case '2':\r\n          nth = 'nd';\r\n          break;\r\n        case '3':\r\n          nth = 'rd';\r\n          break;\r\n        default:\r\n          nth = 'th';\r\n      }\r\n    }\r\n  \r\n    formattedDate = (withYear) ? formattedDate.replace(',', nth).replace(/[,]/gm, '\\n') : formattedDate.replace(/[,](.){5}[,]/gm, nth);\r\n    return formattedDate;\r\n  }\r\n\r\n  export default formatDate;","import formatDate from '../utilities/fromatDate';\r\n\r\nfunction Note( { title, createdAt, updatedAt, text, onDelete, onOpenModal, index }) {\r\n    const createdFormattedDate = formatDate(createdAt, true); // withYear = false\r\n    const updatedFormattedDate = (updatedAt) ? formatDate(updatedAt, true) : null; // withYear = false\r\n    const createdClass = (updatedAt) ? 'date' : 'title';\r\n    return (\r\n        <div className='note tilt-in-fwd-br' onClick={(e) => onOpenModal(e, index)}>\r\n            {<span className='note__item note__item--close' onClick={() => onDelete(index)}>âœ–</span>}\r\n            {title ?\r\n            <div className='note__item note__item--top'>\r\n                <h4 className='note__item note__item--title'>{title}</h4>\r\n                {updatedAt ?\r\n                <p className='note__item note__item--date'>updated:<br />{updatedFormattedDate}</p> : null}\r\n                <p className='note__item note__item--date'>created:<br />{createdFormattedDate}</p>\r\n            </div>\r\n            :\r\n            <div className='note__item note__item--top'>\r\n                {updatedAt ?\r\n                <p className='note__item note__item--title'>updated:<br />{updatedFormattedDate}</p> : null}\r\n                <p className={`note__item note__item--${createdClass}`}>created:<br />{createdFormattedDate}</p>\r\n            </div>\r\n            }\r\n                <p className='note__item note__item--text'>{text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Note;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport NoteForm from './components/NoteForm';\nimport Note from './components/note';\n\nimport Modal from 'react-modal';\nimport swal from 'sweetalert';\n\nModal.setAppElement('#root');\nconst customStyles = {\n  content: {\n    inset: 'unset',\n    border: 'unset',\n    background: 'unset',\n    overflow: 'unset',\n    borderRadius: 'unset',\n    outline: 'unset',\n    padding: 'unset',\n  },\n};\n\nfunction App(props) {\n  const [notes, setNotes] = useState([]);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [modalNoteIndex, setModalNoteIndex] = useState(null);\n\n  const handleAdd = (newNote) => {\n    setNotes([...notes, newNote]);\n  }\n\n  const handleUpdate = (updatedNote) => {\n    const updatedNotes = [...notes];\n    updatedNotes.splice(modalNoteIndex, 1, updatedNote);\n    setNotes(updatedNotes);\n    closeModal();\n  }\n\n  const handleDelete = (updatedNotes) => {\n    setNotes(updatedNotes);\n  }\n\n  const confirmDelete = (deleteIndex) => {\n    swal({\n      title: \"Are you sure?\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n    .then((willDelete) => {\n      if (willDelete) {\n        const updatedNotes = [...notes];\n        updatedNotes.splice(deleteIndex, 1);\n        handleDelete(updatedNotes);\n      } else {\n        swal(\"Delete cancelled\");\n        return;\n      }\n    });\n  }\n\n  const openModal = (e, updateIndex) => {\n    if (e.target.classList.contains('note__item--close')) return;\n    setModalNoteIndex(updateIndex);\n    setIsOpen(true);\n  }\n\n  const closeModal = () => {\n    setIsOpen(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-h1\">Notes Cork Board with React.js</h1>\n        <NoteForm\n          onAdd={handleAdd}\n          title={''}\n          text={''} />\n      </header>\n      <main className=\"App-main\">\n        {notes.length ?\n        notes.map((note, index) =>\n        <Note\n          key={note.id}\n          index={index}\n          onDelete={confirmDelete}\n          onOpenModal={openModal}\n          title={note.title}\n          createdAt={note.createdAt}\n          updatedAt={note.updatedAt}\n          text={note.text}\n          id={note.id} />) :\n        <p className=\"no-notes\">No notes to show</p>}\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Note Modal\"\n        >\n          <span className=\"modal__item modal__item--close\" onClick={closeModal}>âœ–</span>\n          <NoteForm\n            onUpdate={handleUpdate}\n            id={modalIsOpen ? notes[modalNoteIndex].id : null}\n            title={modalIsOpen ? notes[modalNoteIndex].title : null}\n            text={modalIsOpen ? notes[modalNoteIndex].text : null}\n            createdAt={modalIsOpen ? notes[modalNoteIndex].createdAt : null}\n            updatedAt={modalIsOpen ? notes[modalNoteIndex].updatedAt : null} />\n        </Modal>\n\n      </main>\n      <footer className=\"App-footer\">\n        <p>Â© all rights reserved to <a className=\"App-link\" href=\"https://www.linkedin.com/in/yaniv-aflalo-8aa92386/\" target=\"_blank\" rel=\"noreferrer\">Yaniv Aflalo</a>, full stack developer</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}